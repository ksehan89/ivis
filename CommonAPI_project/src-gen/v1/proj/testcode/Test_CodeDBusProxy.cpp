/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.12.v201907221221.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/proj/testcode/Test_CodeDBusProxy.hpp>

namespace v1 {
namespace proj {
namespace testcode {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createTest_CodeDBusProxy(
    const CommonAPI::DBus::DBusAddress &_address,
    const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
    return std::make_shared< Test_CodeDBusProxy>(_address, _connection);
}

void initializeTest_CodeDBusProxy() {
     CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
        Test_Code::getInterface(),
        &createTest_CodeDBusProxy);
}

INITIALIZER(registerTest_CodeDBusProxy) {
    CommonAPI::DBus::Factory::get()->registerInterface(initializeTest_CodeDBusProxy);
}

Test_CodeDBusProxy::Test_CodeDBusProxy(
    const CommonAPI::DBus::DBusAddress &_address,
    const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
    :   CommonAPI::DBus::DBusProxy(_address, _connection)
,        speedValue_(*this, "onSpeedValueAttributeChanged", "setSpeedValueAttribute", "i", "getSpeedValueAttribute", static_cast< CommonAPI::DBus::IntegerDeployment* >(nullptr)),
        rpmValue_(*this, "onRpmValueAttributeChanged", "setRpmValueAttribute", "i", "getRpmValueAttribute", static_cast< CommonAPI::DBus::IntegerDeployment* >(nullptr))
{
}

      Test_CodeDBusProxy::SpeedValueAttribute& Test_CodeDBusProxy::getSpeedValueAttribute() {
          return speedValue_;
      }
      Test_CodeDBusProxy::RpmValueAttribute& Test_CodeDBusProxy::getRpmValueAttribute() {
          return rpmValue_;
      }




void Test_CodeDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
          ownVersionMajor = 1;
          ownVersionMinor = 0;
      }

      } // namespace testcode
      } // namespace proj
      } // namespace v1
