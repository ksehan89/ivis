/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.12.v201907221221.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/proj/testcode/Test_Code.hpp>
#include <v1/proj/testcode/Test_CodeDBusStubAdapter.hpp>

namespace v1 {
namespace proj {
namespace testcode {

std::shared_ptr<CommonAPI::DBus::DBusStubAdapter> createTest_CodeDBusStubAdapter(
                   const CommonAPI::DBus::DBusAddress &_address,
                   const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
                   const std::shared_ptr<CommonAPI::StubBase> &_stub) {
    return std::make_shared< Test_CodeDBusStubAdapter<::v1::proj::testcode::Test_CodeStub>>(_address, _connection, std::dynamic_pointer_cast<::v1::proj::testcode::Test_CodeStub>(_stub));
}

void initializeTest_CodeDBusStubAdapter() {
    CommonAPI::DBus::Factory::get()->registerStubAdapterCreateMethod(
        Test_Code::getInterface(), &createTest_CodeDBusStubAdapter);
}

INITIALIZER(registerTest_CodeDBusStubAdapter) {
    CommonAPI::DBus::Factory::get()->registerInterface(initializeTest_CodeDBusStubAdapter);
}

} // namespace testcode
} // namespace proj
} // namespace v1
